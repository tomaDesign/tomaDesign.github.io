{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  sqlTaskSubscription: Subscription;    // SQL lekérdezések\n  uzenetSubscription: Subscription;     // felhasználói üzenetből objektum állapota\n  uzenet: any;                          // Helyi példány a felhasználói üzenetből\n  sqlTasks: any;                        // SQL kérések helyi példánya\n  sqlTaskSubscriptions = {};            // SQL kérések futtatásához tartozó feliratkozások\n  Object = Object; // a template fájlokban is elérhető így\n\n  serverStatus: IStatusObject = {\n    subscription: null,\n    interval: null,\n    indicator: StatusIndicator.pending,\n    url: '/serverStatus'\n  };\n  mysqlServerStatus: IStatusObject = {\n    subscription: null,\n    interval: null,\n    indicator: StatusIndicator.pending,\n    url: '/mysqlServerStatus'\n  };\n  mysqlTableStatus: IStatusObject = {\n    subscription: null,\n    interval: null,\n    indicator: StatusIndicator.pending,\n    url: '/mysqlTableStatus'\n  };\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    this.reloadSqlTasks();\n    // this.reloadUzenet(); // legutolsó alkalommal nem volt használva.\n    this.startMonitoring();\n  }\n\n  ngOnDestroy(): void {\n    if (this.sqlTaskSubscription) {\n      this.sqlTaskSubscription.unsubscribe();\n    }\n\n    if (this.serverStatus.subscription) {\n      this.serverStatus.subscription.unsubscribe();\n    }\n    if (this.mysqlServerStatus.subscription) {\n      this.mysqlServerStatus.subscription.unsubscribe();\n    }\n    if (this.mysqlTableStatus.subscription) {\n      this.mysqlTableStatus.subscription.unsubscribe();\n    }\n\n\n    if (this.serverStatus.interval) {\n      clearInterval(this.serverStatus.interval);\n    }\n    if (this.mysqlServerStatus.interval) {\n      clearInterval(this.mysqlServerStatus.interval);\n    }\n    if (this.mysqlTableStatus.interval) {\n      clearInterval(this.mysqlServerStatus.interval);\n    }\n  }\n\n  startMonitoring() {\n    this.startMonitoringInterval(this.serverStatus);\n    this.startMonitoringInterval(this.mysqlServerStatus);\n    this.startMonitoringInterval(this.mysqlTableStatus);\n  }\n\n  startMonitoringInterval(statusObj: IStatusObject) {\n    this.createHttpRequest(statusObj);\n    statusObj.interval = setInterval(() => {\n      this.createRESTSubscription(statusObj);\n    }, environment.timeoutLenghtInMS);\n  }\n\n  private createRESTSubscription(statusObj: IStatusObject) {\n    if (statusObj.subscription) {\n      statusObj.subscription.unsubscribe();\n    }\n    statusObj.subscription = this.createHttpRequest(statusObj);\n  }\n\n  private createHttpRequest(statusObj: IStatusObject) {\n    return this.http.get(environment.baseUrl + statusObj.url).subscribe((res: any) => {\n      if (res && res.alive) {\n        statusObj.indicator = StatusIndicator.active;\n      } else {\n        statusObj.indicator = StatusIndicator.offline;\n      }\n    }, err => {\n      console.error('Error with ', statusObj.url, ' status:', err);\n      statusObj.indicator = StatusIndicator.offline;\n    });\n  }\n\n  private reloadSqlTasks() {\n    if (this.sqlTaskSubscription) {\n      this.sqlTaskSubscription.unsubscribe();\n\n    }\n    this.sqlTaskSubscription = this.http.get(environment.baseUrl + '/sqltasks').subscribe(res => {\n        this.sqlTasks = (res as Array<any>).filter(task => task.adminPage);\n        this.requestSqlTaskResults();\n      }, err => {\n        console.log('error: ', err);\n      }\n    );\n  }\n\n  private reloadUzenet() {\n    if (this.uzenetSubscription) {\n      this.uzenetSubscription.unsubscribe();\n    }\n\n    this.uzenetSubscription = this.http.get(environment.baseUrl + '/uzenet').subscribe(res => {\n      this.uzenet = (res as any).uzenet;\n    }, err => {\n      console.log('error: ', err);\n    });\n  }\n\n  requestSqlTaskResults() {\n    this.sqlTasks.forEach(entry => {\n      if (this.sqlTaskSubscriptions[entry.id]) {\n        this.sqlTaskSubscriptions[entry.id].unsubscribe();\n      }\n      this.sqlTaskSubscriptions[entry.id] = this.http.get(environment.baseUrl + '/lekerdezes/' + entry.id).subscribe(res => {\n        entry.response = res;\n      }, err => {\n        console.log('error: ', err);\n      });\n    });\n  }\n\n  refresh() {\n    this.serverStatus.indicator = StatusIndicator.pending;\n    this.mysqlServerStatus.indicator = StatusIndicator.pending;\n    this.ngOnDestroy();\n    this.ngOnInit();\n  }\n}\n\nenum StatusIndicator {\n  pending = 'pending', active = 'active', offline = 'offline'\n}\n\ninterface IStatusObject {\n  subscription: Subscription;\n  interval: any;\n  indicator: StatusIndicator;\n  url: string;\n}\n","<div class=\"page\" fxLayout=\"column\" fxLayoutAlign=\"center center\">\n  <div class=\"container\">\n    <div style=\"text-align:center\">\n      <h1>\n        Parkolóház - Adminisztrációs oldal\n      </h1>\n      <div fxLayout=\"row\">\n        <p>Ezzel a gombbal újratöltheti a lekérdezéseket:</p>\n        <button mat-raised-button color='primary' (click)=\"refresh()\">\n          Adatok frissítése\n          <mat-icon>refresh</mat-icon>\n        </button>\n      </div>\n\n    </div>\n\n    <h2>Szerver státusz:</h2>\n    <mat-card>\n      <p>\n        Az alábbi kapcsolók jelzik, hogy rendben működik-e az Alkalmazásszerver és az Adatbázis:\n      </p>\n      <table>\n        <tr>\n          <td>Alkalmazásszerver státusz:</td>\n          <td>\n            <button mat-button\n                    [ngClass]=\"{'pending-button':serverStatus.indicator === 'pending',\n              'offline-button':serverStatus.indicator === 'offline',\n              'active-button':serverStatus.indicator === 'active'}\">\n              <ng-container [ngSwitch]=\"serverStatus.indicator\">\n                <ng-container *ngSwitchCase=\"'pending'\">Lekérdezés...</ng-container>\n                <ng-container *ngSwitchCase=\"'offline'\">Nem elérhető!</ng-container>\n                <ng-container *ngSwitchDefault>Elérhető</ng-container>\n              </ng-container>\n            </button>\n          </td>\n        </tr>\n        <tr>\n          <td>MySQL szerver státusz:</td>\n          <td>\n            <button mat-button [ngClass]=\"{'pending-button':mysqlServerStatus.indicator === 'pending',\n              'offline-button':mysqlServerStatus.indicator === 'offline',\n              'active-button':mysqlServerStatus.indicator === 'active'}\">\n              <ng-container [ngSwitch]=\"mysqlServerStatus.indicator\">\n                <ng-container *ngSwitchCase=\"'pending'\">Lekérdezés...</ng-container>\n                <ng-container *ngSwitchCase=\"'offline'\">Nem elérhető!</ng-container>\n                <ng-container *ngSwitchDefault>Elérhető</ng-container>\n              </ng-container>\n            </button>\n          </td>\n        </tr>\n        <tr>\n          <td>MySQL adatbázis státusz:</td>\n          <td>\n            <button mat-button [ngClass]=\"{'pending-button':mysqlTableStatus.indicator === 'pending',\n              'offline-button':mysqlTableStatus.indicator === 'offline',\n              'active-button':mysqlTableStatus.indicator === 'active'}\">\n              <ng-container [ngSwitch]=\"mysqlTableStatus.indicator\">\n                <ng-container *ngSwitchCase=\"'pending'\">Lekérdezés...</ng-container>\n                <ng-container *ngSwitchCase=\"'offline'\">Még nincs létrehozva!</ng-container>\n                <ng-container *ngSwitchDefault>Elérhető</ng-container>\n              </ng-container>\n            </button>\n          </td>\n        </tr>\n      </table>\n    </mat-card>\n\n<!--    legutolsó alkalommal nem volt használva.-->\n<!--    <h2>Legutolsó beküldött üzenet:</h2>-->\n<!--    <mat-card>-->\n<!--      <ng-container *ngIf=\"uzenet;else noChat\">-->\n<!--        <div fxLayout=\"column\">-->\n<!--          <div fxLayout=\"row\" >-->\n<!--            <p fxFlex=\"30\" fxFlexAlign=\"center\">Legutolsó beküldött üzenet:</p> <br/>-->\n<!--            <p class=\"mat-elevation-z2\" style=\"padding: 10px;\">-->\n<!--              {{uzenet}}-->\n<!--            </p>-->\n<!--          </div>-->\n<!--        </div>-->\n\n<!--        <hr/>-->\n\n<!--      </ng-container>-->\n<!--      <ng-template #noChat>-->\n<!--        <p>Lekérdezés...</p>-->\n<!--      </ng-template>-->\n<!--    </mat-card>-->\n\n\n    <h2>SQL lekérdezések eredményei:</h2>\n    <ng-container *ngIf=\"sqlTasks; else noEntry\">\n      <ng-container *ngFor=\"let entry of sqlTasks\">\n\n        <mat-card>\n          <mat-card-header>\n            <h2>{{entry.id}}. Feladat:</h2>\n          </mat-card-header>\n\n          <h4 class=\"sql-description\">{{entry.description}}</h4>\n          <ng-container *ngIf=\"entry.response; else waitingForEntries\">\n            <table class=\"query-table\">\n              <ng-container *ngIf=\"entry.response.empty; else resultTemplate\">\n                <p><b>Ehhez a feladathoz még nem szerepel SQL lekérdezés a beadandó fájlban\n                  (/lekerdezesek/lekerdezesek.sql).</b></p>\n              </ng-container>\n              <ng-template #resultTemplate>\n                <tr>\n                  <th *ngFor=\"let key of Object.keys(entry?.response[0])\">{{key}}</th>\n                </tr>\n                <ng-container *ngFor=\"let resultEntry of entry.response\">\n\n                  <tr>\n                    <td *ngFor=\"let val of Object.values(resultEntry)\">{{val}}</td>\n                  </tr>\n                </ng-container>\n              </ng-template>\n            </table>\n          </ng-container>\n\n        </mat-card>\n\n\n        <mat-divider></mat-divider>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #noEntry>\n      Nem sikerült az SQL lekérdezéseket lekérdezni.\n    </ng-template>\n\n    <ng-template #waitingForEntries>\n      <p>A lekérdezéshez tartozó válasz betöltése nem sikerült.</p>\n    </ng-template>\n\n  </div>\n</div>\n\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport {FlexLayoutModule} from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatListModule,\n    HttpClientModule,\n    MatButtonModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatInputModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:8080/api',\n  timeoutLenghtInMS: 5000\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}